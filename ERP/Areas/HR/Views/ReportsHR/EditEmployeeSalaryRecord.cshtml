@using System.Data;
@using System.Collections.Generic;
@using Newtonsoft.Json;
@model DataSet;
@{
    ViewData["Title"] = "Employee Salary Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
@{
    List<string> strForRow = new List<string>();
    DateTime date = ViewBag.MonthYear ?? DateTime.Today.Date;
    //string monthyear = string.Concat(date.Year + "-" + date.Month);
    string monthyear = date.ToString("yyyy-MM");
    int? employeeId = ViewBag.EmployeeID;
    int? empCatId = ViewBag.EmployeeCategoryID;
    int? companyID = ViewBag.CompanyID;
    int? employmentTypeId = ViewBag.EmploymentTypeID;
}

<div class="container" id="editEmployeeSalary">
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12 mx-auto">
            <div class="card border-0 shadow rounded-3">
                <div class="card-body">

                    <div class="col-sm-12 col-md-6 col-lg-6">
                        <div class="page-breadcrumb align-items-center">
                            <div class="p-2">
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb mb-0 p-0">
                                        <li class="breadcrumb-item">
                                            <a asp-area="HR" asp-controller="ReportsHR" asp-action="GetEmployeeSalarySummary"><i class="bx bx-home-alt"></i></a>
                                        </li>
                                        <li class="breadcrumb-item active" aria-current="page">Employee Salary Summary Edit</li>
                                    </ol>
                                </nav>
                            </div>
                        </div>
                    </div>


                    <hr />

                    <div class="row mb-1">
                        <label class="col-3 col-form-label">Select Month & Year</label>
                        <div class="col-3">
                            <input type="month" class="form-control" id="month" value="@monthyear">
                        </div>
                        <label for="" class="col-sm-3 col-form-label ">Company:</label>
                        <div class="col-sm-3">
                            <select class="form-select" asp-for="@companyID" id="CompanyID" name="CompanyID" asp-items="@EmployeeExtension.GetAllCompanyAsync()">
                                <option value="">Select Company</option>
                            </select>
                        </div>


                    </div>

                    <div class="row mb-1">
                        <label class="col-3 col-form-label">Employee Category</label>
                        <div class="col-3">
                            <select class="form-control" id="EmployeeCategoryID" name="EmployeeCategoryID" asp-items="@EmployeeExtension.GetAllEmployeeCategoryMaster()" asp-for="@empCatId">
                                <option value="">Select Category</option>
                            </select>
                        </div>
                        <label class="col-sm-3 col-form-label">Employee Name</label>
                        <div class="col-3">
                            <select class="form-control" id="EmployeeID" name="EmployeeID" asp-items="@EmployeeExtension.GetAllEmployeesForDropDown()" asp-for="@employeeId" disabled>
                            </select>
                        </div>

                    </div>

                    <div class="row mb-1">
                        @*                        <label for="" class="col-sm-3 col-form-label ">Employment Type:</label>
                        <div class="col-sm-3">
                        <select class="form-select" asp-for="@employmentTypeId" id="EmploymentTypeID" name="EmploymentTypeID" asp-items="@EmployeeExtension.GetAllEmploymentType()">
                        <option value="">Select Employment Type</option>
                        </select>
                        </div>*@
                    </div>

                    <div class="text-end mb-3">
                        @*            <input type="button" value="Run Salary Process" class="btn btn-outline-primary px-5 btn-sm" onclick="fnSearchEmpSal(1)" />

                        <input type="button" value="Export to excel" class="btn btn-outline-primary px-5 btn-sm" onclick="fnSearchEmpSal(true)" />*@

                        @*<button id="btnSearchEmployeePresent" type="button" onclick="fnSearchEmpSal(false)" class="btn btn-outline-primary px-5 btn-sm">Search</button>*@
                    </div>

                    <div id="EmployeeSummaryTable">
                        @if (Model != null)
                        {
                            if (Model.Tables[0].Rows.Count > 0)
                            {
                                <div  class="row" style="overflow:auto; height:auto; width:auto;">
                                    <table id="tableUpdatedVerifiedSalary" class="table table-striped table-hover table-bordered" style="white-space: nowrap; font-size:inherit !important;">
                                        <!--style="display:block; overflow: auto; white-space: nowrap;"-->
                                        @*<thead style="position: sticky; top: 0; background-color:#e9ecf8; color:black; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">*@
                                        <thead>
                                            <tr>
                                                @foreach (DataColumn dataColumn in Model.Tables[0].Columns)
                                                {
                                                    if (!dataColumn.ColumnName.ToString().Equals("EmployeeID") && !dataColumn.ColumnName.ToString().Equals("EmployeeDynamicSalaryCalculationID"))
                                                    {
                                                        strForRow.Add(dataColumn.ToString());
                                                        <th>@dataColumn.ToString()</th>
                                                    }
                                                }
                                            </tr>
                                        </thead>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            <tr>
                                                @*            <td class="text-center">
                                    <a asp-area="HR" asp-controller="ReportsHR" asp-action="VerifySalary" asp-route-verifiedId="@row[0].ToString()" onclick="fnVerifySalary()"><iconify-icon icon="material-symbols:verified-outline" style="font-size:20px"></iconify-icon></a>
                                    </td><!--Added by Dravesh-->*@

                                                @foreach (string timeRow in strForRow)
                                                {
                                                    @if (!string.IsNullOrEmpty(row[timeRow].ToString()))
                                                    {
                                                        if (timeRow.Equals("CalculatedValue"))
                                                        {
                                                            <td>
                                                                <input type="text" class="form-control" id="EmployeeName" value="@row[timeRow]" />
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td>@row[timeRow]</td>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (timeRow.Equals("CalculatedValue"))
                                                        {
                                                            <td>
                                                                <input type="text" class="form-control" id="EmployeeName" value="-" />
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td>-</td>
                                                        }

                                                    }
                                                }
                                            </tr>
                                        }
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center">
                                    <h1><iconify-icon icon="mdi:text-box-remove-outline" style="color: #37569d;" width="100"></iconify-icon></h1>
                                    <h3 style="color: red;">No Data Found</h3>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center">
                                <h1><iconify-icon icon="mdi:text-box-remove-outline" style="color: #37569d;" width="100"></iconify-icon></h1>
                                <h3 style="color: red;">No Data Found</h3>
                            </div>
                        }
                    </div>

                    <div class="text-end mb-3">
                        <input type="hidden" id="salaryTable" />
                        <input type="button" value="Verify and Submit" class="btn btn-outline-primary px-5 btn-sm" onclick="fnUpdateVerifiedSalary()" />
                        <input type="button" value="Print" class="btn btn-outline-primary px-5 btn-sm" onclick="fnPrint()" /> &nbsp;
                    </div>
                    <!--
                    @*                 <div class="row" style="height:auto; width:100%;">
                                         <table class="table table-striped w-auto" style="white-space: nowrap; font-size:inherit !important;">
                                             <thead style="position: sticky; top: 0; background-color:#e9ecf8; color:black; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                                                 <tr>
                                                     <th>Label</th>
                                                     <th>Name</th>
                                                     <th>Value</th>
                                                     <th>Formula</th>
                                                 </tr>
                                             </thead>
                                             <tr>
                                                 <td></td>
                                                 <td></td>
                                                 <td></td>
                                                 <td></td>
                                             </tr>
                                         </table>
                                     </div>*@    -->

                </div>
            </div>
        </div>
    </div>
</div>


@await Html.PartialAsync("_ValidationScriptsPartial")
<script type="text/javascript">
    function fnPrint() {
        var printContents = document.getElementById("editEmployeeSalary").innerHTML;
        var originalContents = document.body.innerHTML;
        document.body.innerHTML = printContents;
        window.print();
        document.body.innerHTML = originalContents;
    }


    var table = document.getElementById("tableUpdatedVerifiedSalary");
    var tableData = table.innerHTML;
    document.getElementById("salaryTable").value = tableData;

    var data = @Html.Raw(JsonConvert.SerializeObject(Model));
    var jsonData = JSON.stringify(data);
   

    function fnUpdateVerifiedSalary() {
        alert('fnUpdateVerifiedSalary function invoked.');
        var saldata = [];
        $("#tableUpdatedVerifiedSalary tr:not(:first)").each(function () {
            var tdlist = $(this).find("td");
            var item = {
                SalaryHeadLabel: tdlist[0].innerHTML, SalaryHeadLabel: tdlist[0].children.SalaryHeadLabel.value, SalaryHeadName: tdlist[1].children.SalaryHeadName.value, CalculatedValue: tdlist[2].children.CalculatedValue.value, SalaryFormula: tdlist[3].children.SalaryFormula.value
            }
            debugger;
            alert('loop invoked.'+ item);
            saldata.push(item);
        });
        var params = { dataTable: saldata };

        $.ajax({
            type: 'POST',
            url: '/HR/ReportsHR/UpdateVerifiedSalaryTable/',
            data: params,
            dataType: 'json',
            success: function (data) {
                if (data.status) {
                    var test = Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: data.message,
                    });
                    //setTimeout(
                    //    function () {
                    //        //window.location.reload();
                    //        $("#formAddUpdateEmployeeHRAdministration").load(window.location.href + " #formAddUpdateEmployeeHRAdministration");
                    //        //$("#administration-tab").load(window.location.href + " #administration-tab");
                    //        //$("#myTab").load(window.location.href + " #myTab");
                    //    }, 3000);
                }

                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: '@MessageHelper.Error'
                    });
                }
            },
            error: function (error) {
                laddaStop(ls);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: '@MessageHelper.Error'
                });
            }
        }).always(function () {
            hideloader();
        });
    };
</script>